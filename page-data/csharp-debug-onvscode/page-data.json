{"componentChunkName":"component---src-templates-post-template-js","path":"/csharp-debug-onvscode","result":{"data":{"markdownRemark":{"id":"0c7b1112-7ecb-56db-b37b-b63a8d2763a4","html":"<p>この記事は、WLSでC#プログラムをサクッと実行する環境を準備するための備忘録です。</p>\n<p>.Net を使って、ELF形式のコンソールアプリをビルドします。\nまた、WLS接続したVSCode経由で、C#プログラムのデバッグも設定します。</p>\n<h2 id=\"net-50をwsl-ubuntuにインストールする\" style=\"position:relative;\"><a href=\"#net-50%E3%82%92wsl-ubuntu%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\" aria-label=\"net 50をwsl ubuntuにインストールする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.NET 5.0をWSL Ubuntuにインストールする</h2>\n<p>まずはC#でプログラムを作成するために、クロスプラットフォームの.NET 5.0をWSL上のUbuntuにインストールします。</p>\n<p><a href=\"https://dotnet.microsoft.com/download#windowscmd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Download .NET (Linux, macOS, and Windows)</a></p>\n<p>インストールは、以下のドキュメントのDebian10向けの方法と同じコマンドでOKです。</p>\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/core/install/linux-debian\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Install .NET on Debian - .NET | Microsoft Docs</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\n<span class=\"token function\">sudo</span> dpkg -i packages-microsoft-prod.deb\n\n<span class=\"token comment\"># SDKのインストール</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y apt-transport-https <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y dotnet-sdk-5.0</code></pre></div>\n<h2 id=\"vscodeに拡張機能をインストールする\" style=\"position:relative;\"><a href=\"#vscode%E3%81%AB%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\" aria-label=\"vscodeに拡張機能をインストールする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCodeに拡張機能をインストールする</h2>\n<p>次に、VSCodeでC#のデバッグを行うために、拡張機能をインストールします。</p>\n<p>C#で検索した時に一番上にでてくるこの拡張機能をインストールすればOKです。\nちゃんとWSLにVSCodeを接続した状態でインストールします。</p>\n<p><img src=\"assets/2021_06_02_cs_on_wsl.assets/image-20210602195127867.png\" alt=\"image-20210602195127867\"></p>\n<h2 id=\"netプロジェクトを作成する\" style=\"position:relative;\"><a href=\"#net%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"netプロジェクトを作成する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.Netプロジェクトを作成する</h2>\n<p>次に、WSL上で.NETプロジェクトを作成します。\nコンソールアプリとして作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet new console -o <span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span></code></pre></div>\n<p>プロジェクトの作成が完了すると、カレントディレクトリにproject_nameに指定した名前と同じディレクトリが作成されているはずです。</p>\n<h2 id=\"コマンドから実行できることを確認する\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%8B%E3%82%89%E5%AE%9F%E8%A1%8C%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\" aria-label=\"コマンドから実行できることを確認する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コマンドから実行できることを確認する</h2>\n<p>作成したプロジェクトディレクトリに移動してrunコマンドを実行すると、Program.csのコードが実行されます。\nC#プログラムを作成、デバッグする場合は、とりあえずこのファイルをいじっていきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span>\ndotnet run</code></pre></div>\n<h2 id=\"vscodeでデバッグ\" style=\"position:relative;\"><a href=\"#vscode%E3%81%A7%E3%83%87%E3%83%90%E3%83%83%E3%82%B0\" aria-label=\"vscodeでデバッグ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCodeでデバッグ</h2>\n<p>コンソールからの実行が確認できたので、次はVSCodeからデバッグ実行してみます。\nこのとき使用するのは、次の2つのファイルです。</p>\n<ul>\n<li>launch.json</li>\n<li>tasks.json</li>\n</ul>\n<p>どちらも.vscodeディレクトリ直下に作成します。</p>\n<p>VSCodeからWSL上の.NETアプリケーションのデバッグを行う場合、通常自動生成される上記のファイルがうまく動作しません。\nそのため、これらのファイルにC#デバッグのために必要な情報を手動で追記していく必要があります。</p>\n<p>それぞれに記載が必要な内容は以下のとおりです。\nいずれも、「project_name」には自分が作成したプロジェクトの名前にする必要がある点に注意です。</p>\n<ul>\n<li>launch.json</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For <span class=\"token function\">more</span> information, visit: https://go.microsoft.com/fwlink/?linkid<span class=\"token operator\">=</span><span class=\"token number\">830387</span>\n    <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"0.2.0\"</span>,\n    <span class=\"token string\">\"configurations\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\".NET Core Launch (console)\"</span>,\n            <span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"coreclr\"</span>,\n            <span class=\"token string\">\"request\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"launch\"</span>,\n            <span class=\"token string\">\"preLaunchTask\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"build\"</span>,\n            <span class=\"token string\">\"program\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token variable\">${workspaceFolder}</span>/procon_cs/bin/Debug/net5.0/&lt;project_name>.dll\"</span>,\n            <span class=\"token string\">\"args\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,\n            <span class=\"token string\">\"cwd\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token variable\">${workspaceFolder}</span>/&lt;project_name>\"</span>,\n            <span class=\"token string\">\"console\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"internalConsole\"</span>,\n            <span class=\"token string\">\"stopAtEntry\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span>,\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\".NET Core Attach\"</span>,\n            <span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"coreclr\"</span>,\n            <span class=\"token string\">\"request\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"attach\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>tasks.json</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span>\n    // See https://go.microsoft.com/fwlink/?LinkId<span class=\"token operator\">=</span><span class=\"token number\">733558</span>\n    // <span class=\"token keyword\">for</span> the documentation about the tasks.json <span class=\"token function\">format</span>\n    <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2.0.0\"</span>,\n    <span class=\"token string\">\"tasks\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"label\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"build\"</span>,\n            <span class=\"token string\">\"command\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"dotnet\"</span>,\n            <span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"process\"</span>,\n            <span class=\"token string\">\"args\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"build\"</span>,\n                <span class=\"token string\">\"<span class=\"token variable\">${workspaceFolder}</span>/&lt;project_name>/&lt;project_name>.csproj\"</span>,\n                <span class=\"token string\">\"/property:GenerateFullPaths=true\"</span>,\n                <span class=\"token string\">\"/consoleloggerparameters:NoSummary\"</span>\n            <span class=\"token punctuation\">]</span>,\n            <span class=\"token string\">\"problemMatcher\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token variable\">$msCompile</span>\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>これで準備が整ったので、VSCodeからC#プログラムをデバッグしてみます。</p>\n<p>左側のタスクトレイからデバッグツールバーを開き、.NETプログラムのデバッグを実行します。</p>\n<p><img src=\"assets/2021_06_02_cs_on_wsl.assets/image-20210602202737631.png\" alt=\"image-20210602202737631\"></p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>ちょっとした思いつきでWSL上でサクッとC#を書けるようにしたくなったので環境を作ってみました。</p>\n<p>C#は大好きなのですが、毎回VisualStudioを立ち上げるのが結構めんどくさくてあまり書く機会がなかったですが、VSCodeから簡単に実行できるようになったことで今後はもっとC#についても色々勉強していければと思います。</p>","fields":{"slug":"/csharp-debug-onvscode","tagSlugs":["/tag/c/","/tag/備忘録/","/tag/vs-code/"]},"frontmatter":{"date":"2021-06-02","description":".Net を使って、ELF形式のコンソールアプリをビルドします。また、WLS接続したVSCode経由で、C#プログラムのデバッグも設定します。","tags":["C#","備忘録","VSCode"],"title":"WLSでC#をサクッと実行してVSCodeでデバッグするメモ","socialImage":{"publicURL":"/static/dc4d8b7f8795f3c3d3489d9957d155f2/no-image.png"}}}},"pageContext":{"slug":"/csharp-debug-onvscode"}},"staticQueryHashes":["251939775","401334301","825871152"]}