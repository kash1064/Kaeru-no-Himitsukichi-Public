{"componentChunkName":"component---src-templates-post-template-js","path":"/ctf-k3rn3lctf-2021","result":{"data":{"markdownRemark":{"id":"98d189a7-130f-5855-9667-eac45542a126","html":"<p>2021/11/13から開催されていた<a href=\"https://ctftime.org/event/1438\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">K3RN3LCTF</a>にチーム<a href=\"https://ctftime.org/team/168239\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">0neP@dding</a>と（言いつつソロで）参加してきました。</p>\n<p>今回は省エネ参加だったのでRevの2問しか解いてないのですが、2問しか解いていない割に501チーム中139位という結果でした。（以外と難しかったのかもしれない）</p>\n<p>Rev問で実マルウェアを容赦なく配信するエキセントリックなCTFでしたが、簡単にWriteUpを書こうと思います。</p>\n<!-- omit in toc -->\n<h2 id=\"もくじ\" style=\"position:relative;\"><a href=\"#%E3%82%82%E3%81%8F%E3%81%98\" aria-label=\"もくじ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>もくじ</h2>\n<ul>\n<li><a href=\"#zabombrev\">Zabomb（Rev）</a></li>\n<li><a href=\"#wirerev\">WiRE（Rev）</a></li>\n<li><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n</ul>\n<h2 id=\"zabombrev\" style=\"position:relative;\"><a href=\"#zabombrev\" aria-label=\"zabombrev permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Zabomb（Rev）</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Description\nYou received a suspicious <span class=\"token function\">file</span> from the k3rn3l4rmy hacking group, the title says ‘Not a Zip Bomb, Please Open’, you decide NOT to <span class=\"token function\">open</span> it and instead try to reverse it.\n\nIt is recommended that you <span class=\"token keyword\">do</span> NOT <span class=\"token function\">open</span> this, it will fill your entire disk.</code></pre></div>\n<p>ガチマルウェアのZipBombが渡されました。</p>\n<p>参考：<a href=\"https://ja.2007es.com/new-zip-bomb-stuffs-4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">新しいZip Bombが4.5PBのデータを46MBのファイルに詰め込む-2007es.com - コンピューティング</a></p>\n<p>ZIPファイルの中身を見ると、異常なサイズのファイルと小さなサイズのファイルの2種類が圧縮されていました。</p>\n<p>7ZIPなどを使って、特定のファイルのみ解凍すればOK。</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">7za<span class=\"token punctuation\">.</span>exe x <span class=\"token operator\">-</span>y <span class=\"token operator\">-</span>oC:\\output\\ <span class=\"token operator\">-</span>ir!filename bomb<span class=\"token punctuation\">.</span>zip\n<span class=\"token comment\"># flag{w0w_c0mpres51on_&amp;_d3comp53ssi0N_!s_s0_c3wl_ju5t_d0n7_gO_b0OM}</span></code></pre></div>\n<p>参考：<a href=\"http://blog.livedoor.jp/ryanorano/archives/58882007.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">コマンドラインで、zipファイルから特定のファイルのみ解凍する(Windows) : 若手基盤系SEの日記。</a></p>\n<h2 id=\"wirerev\" style=\"position:relative;\"><a href=\"#wirerev\" aria-label=\"wirerev permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WiRE（Rev）</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Description\n\nWe wire an encryption message that contains flag from remote server and dumped it out to kernelCTF_dump.pcapng file, i'm pretty sure that client has implementation of algorithm to decrypt data and get flag, will you take up the challenge?</code></pre></div>\n<p>謎のpcapファイルとPEバイナリが渡されます。</p>\n<p>どうやら、PEバイナリの方がメッセージを暗号化して送受信するクライアントプログラムであり、pcapファイルがFlagを暗号化してやりとりしたときの記録のようです。</p>\n<p>デコンパイルしてみたところ、クライアントプログラムは起動した後、以下の順序で動くことがわかりました。</p>\n<ul>\n<li>ローカルホストの9905ポートに対してTCP接続を試行する</li>\n<li>TCP接続に成功した場合、メッセージデータを暗号化して送信する</li>\n<li>接続先のサーバから、暗号化されたFLAGデータを取得する</li>\n<li>コネクションをクローズする</li>\n</ul>\n<p>上記の処理に沿ってpcapファイルのパケットを解析したところ、<code class=\"language-text\">d33411044a6202726302656e6901636e637462017d6702756e760101756e7b0173104c0a</code>という暗号化されたFlagデータを受け取っていることがわかりました。</p>\n<p>暗号化の処理はこちら。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">safeWrapMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n  byte <span class=\"token operator\">*</span>pbVar1<span class=\"token punctuation\">;</span>\n  byte <span class=\"token operator\">*</span>pbVar2<span class=\"token punctuation\">;</span>\n  code <span class=\"token operator\">*</span>pcVar3<span class=\"token punctuation\">;</span>\n  byte <span class=\"token operator\">*</span>pbVar4<span class=\"token punctuation\">;</span>\n  byte <span class=\"token operator\">*</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">;</span>\n  \n  pbVar1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">;</span>\n  pbVar2 <span class=\"token operator\">=</span> local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>pbVar4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>byte <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">(</span>longlong<span class=\"token punctuation\">)</span>pbVar4 <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>longlong<span class=\"token punctuation\">)</span>pbVar2<span class=\"token punctuation\">;</span> pbVar4 <span class=\"token operator\">=</span> pbVar4 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pbVar4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> LAB_004dbf48<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>longlong<span class=\"token punctuation\">)</span>pbVar4<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pbVar1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>longlong<span class=\"token punctuation\">)</span>pbVar4<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>longlong<span class=\"token punctuation\">)</span>local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">*</span><span class=\"token operator\">*</span>local_res8 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>local_res8 <span class=\"token operator\">^</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>byte <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x1</span> <span class=\"token operator\">&lt;</span> local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>byte <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x2</span> <span class=\"token operator\">&lt;</span> local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>byte <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x3</span> <span class=\"token operator\">&lt;</span> local_res8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>local_res8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      runtime<span class=\"token punctuation\">.</span><span class=\"token function\">panicIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    runtime<span class=\"token punctuation\">.</span><span class=\"token function\">panicIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  runtime<span class=\"token punctuation\">.</span><span class=\"token function\">panicIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLAB_004dbf48<span class=\"token operator\">:</span>\n  runtime<span class=\"token punctuation\">.</span><span class=\"token function\">panicIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pcVar3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">swi</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pcVar3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Flagの全文字を0x31でXOR暗号化した上で、前4文字をさらにXOR暗号化しているようです。</p>\n<p>というわけで、<code class=\"language-text\">d33411044a6202726302656e6901636e637462017d6702756e760101756e7b0173104c0a</code>を0x31でXORして、最初の4文字をflagに置き換えることでFlagが取得できました。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>WiREは、Ghidraのデコンパイル結果がいまいちでなかなかFlagにたどり着けませんでした。</p>\n<p>IDA Freeでデコンパイルしてみたところ、プログラムの処理を把握するのに有用な情報がGhidraに比べて見やすかったため、解くことができました。</p>\n<p>バイナリによってはGhidraとIDAなどのデコンパイラの出力の見やすさに差異がでるようなので、今後解けないときは両方のデコンパイラを試してみるのはありだと思いました。</p>","fields":{"slug":"/ctf-k3rn3lctf-2021","tagSlugs":["/tag/ctf/","/tag/reversing/"]},"frontmatter":{"date":"2021-11-15","description":"Rev問で実マルウェアを容赦なく配信するエキセントリックなCTFでしたが、簡単にWriteUpを書こうと思います。","tags":["CTF","Reversing"],"title":"K3RN3LCTF 2021 Writeup","socialImage":{"publicURL":"/static/dc4d8b7f8795f3c3d3489d9957d155f2/no-image.png"}}}},"pageContext":{"slug":"/ctf-k3rn3lctf-2021"}},"staticQueryHashes":["251939775","401334301","825871152"]}