{"componentChunkName":"component---src-templates-post-template-js","path":"/ctf-n1ctf-2021","result":{"data":{"markdownRemark":{"id":"4fc38ae9-772d-5641-9dad-eaf23fdc9847","html":"<p>2021/11/20から開催されていたn1CTFに参加してきました。</p>\n<p>残念ながら解ける問題がなく、チャレンジだけで終了しました。</p>\n<p>今回は、他のチャレンジャーのWriteUpを参考に、解けなかった問題について振り返っていこうと思います。</p>\n<!-- omit in toc -->\n<h2 id=\"もくじ\" style=\"position:relative;\"><a href=\"#%E3%82%82%E3%81%8F%E3%81%98\" aria-label=\"もくじ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>もくじ</h2>\n<ul>\n<li>\n<p><a href=\"#signin-web\">Signin (Web)</a></p>\n<ul>\n<li><a href=\"#isset_gettime\">isset($_GET[‘time’])</a></li>\n<li><a href=\"#file_get_contentsphpinput\">file<em>get</em>contents(‘php://input’)</a></li>\n<li><a href=\"#date%E3%81%AE%E3%83%90%E3%82%A4%E3%83%91%E3%82%B9\">date()のバイパス</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n</ul>\n<h2 id=\"signin-web\" style=\"position:relative;\"><a href=\"#signin-web\" aria-label=\"signin web permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Signin (Web)</h2>\n<p>以下のようなPHPスクリプトで稼働しているWEBサイトにアクセスできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token comment\">//flag is /flag</span>\n<span class=\"token variable\">$path</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y/m/d H:i:s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"/var/www/tmp/\"</span><span class=\"token operator\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.txt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$black</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"f|ht|ba|z|ro|;|,|=|c|g|da|_\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$blist</span><span class=\"token operator\">=</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$black</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$blist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'111'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$time</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre class='language-html'>&lt;code class='language-html'>logpath:<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>&lt;/code>&lt;/pre>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$check</span><span class=\"token operator\">=</span><span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/((\\s)*(\\n)+(\\s)*)/i'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre class='language-html'>&lt;code class='language-html'>\"</span><span class=\"token operator\">.</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$check</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;/code>&lt;/pre>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>どうやら<code class=\"language-text\">/flag</code>というパスにフラグが存在するものの、POSTで送られてきた<code class=\"language-text\">path</code>のデータはブラックリストでフィルタリングされてしまうようです。</p>\n<p>この問題については、当初は<code class=\"language-text\">path</code>の値に、ブラックリストには引っかからない文字列を使ったeval文などを用いて、最終的に<code class=\"language-text\">$check</code>に<code class=\"language-text\">/flag</code>が格納されている状態を作る問題と想定していましたが、残念ながら誤りでした。</p>\n<p>この問題のFlagを取るためには、<code class=\"language-text\">$time=(isset($_GET['time'])) ? urldecode(date(file_get_contents('php://input'))) : date(\"Y/m/d H:i:s\");</code>の行に着目します。</p>\n<h3 id=\"isset_gettime\" style=\"position:relative;\"><a href=\"#isset_gettime\" aria-label=\"isset_gettime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>isset($_GET[‘time’])</h3>\n<p>この記法は、変数の存在確認を行います。</p>\n<p>つまり、GETクエリに<code class=\"language-text\">time</code>が含まれているかどうかを判断しているというわけです。</p>\n<p>参考：<a href=\"https://www.php.net/manual/en/function.isset.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PHP: isset - Manual</a></p>\n<h3 id=\"filegetcontentsphpinput\" style=\"position:relative;\"><a href=\"#filegetcontentsphpinput\" aria-label=\"filegetcontentsphpinput permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>file<em>get</em>contents(‘php://input’)</h3>\n<p>GETクエリに<code class=\"language-text\">time</code>が含まれているとき、このスクリプトが呼び出されます。</p>\n<p><code class=\"language-text\">file_get_contents('php://input')</code>は、HTTPヘッダ以下の生データを取得することができます。</p>\n<p>参考：<a href=\"https://stackoverflow.com/questions/8893574/php-php-input-vs-post\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ajax - PHP “php://input” vs $_POST - Stack Overflow</a></p>\n<p>参考：<a href=\"https://qiita.com/hirotototototo/items/d81bc081d6abfd6cc66f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PHP file<em>get</em>contents()とは - Qiita</a></p>\n<h3 id=\"dateのバイパス\" style=\"position:relative;\"><a href=\"#date%E3%81%AE%E3%83%90%E3%82%A4%E3%83%91%E3%82%B9\" aria-label=\"dateのバイパス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>date()のバイパス</h3>\n<p>上記のとおり<code class=\"language-text\">file_get_contents('php://input')</code>で文字列として取得したリクエストデータを<code class=\"language-text\">date()</code>関数に渡しています。</p>\n<p>ここで、<a href=\"https://www.php.net/manual/en/function.date.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公式ドキュメント</a>を読むと、<code class=\"language-text\">date()</code>のフォーマットのサンプルが出てきました。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// Assuming today is March 10th, 2001, 5:16:18 pm, and that we are in the</span>\n<span class=\"token comment\">// Mountain Standard Time (MST) Time Zone</span>\n\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"F j, Y, g:i a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// March 10, 2001, 5:16 pm</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"m.d.y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 03.10.01</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"j, n, Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// 10, 3, 2001</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Ymd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 20010310</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'h-i-s, j-m-y, it is w Day'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 05-16-18, 10-03-01, 1631 1618 6 Satpm01</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\i\\t \\i\\s \\t\\h\\e jS \\d\\a\\y.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// it is the 10th day.</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"D M j G:i:s T Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// Sat Mar 10 17:16:18 MST 2001</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'H:m:s \\m \\i\\s\\ \\m\\o\\n\\t\\h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 17:03:18 m is month</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"H:i:s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 17:16:18</span>\n<span class=\"token variable\">$today</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d H:i:s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 2001-03-10 17:16:18 (the MySQL DATETIME format)</span>\n<span class=\"token delimiter important\">?></span></span></code></pre></div>\n<p>これを見ると分かるように<code class=\"language-text\">date('\\i\\t \\i\\s \\t\\h\\e jS \\d\\a\\y.');</code>の形式でバックスラッシュを付けることで、<code class=\"language-text\">date()</code>関数による日付への変換がバイパスされる仕様のようです。</p>\n<p>この仕様を利用して、以下のようにPOSTデータに<code class=\"language-text\">\\/\\f/l\\/a/g</code>を送信すると、最終的に<code class=\"language-text\">$time</code>に<code class=\"language-text\">/flag</code>が格納され、Flagを取得できます。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>ほんとはRevの問題の復習をしたかったのだけど、WriteUpが見つかりませんでした。</p>\n<p>見つかったら更新しようと思います。</p>","fields":{"slug":"/ctf-n1ctf-2021","tagSlugs":["/tag/ctf/","/tag/web/"]},"frontmatter":{"date":"2021-11-26","description":"2021/11/20から開催されていたn1CTFに参加してきました。残念ながら解ける問題がなく、チャレンジだけで終了しました。","tags":["CTF","Web"],"title":"N1CTF2021 Writeup","socialImage":{"publicURL":"/static/dc4d8b7f8795f3c3d3489d9957d155f2/no-image.png"}}}},"pageContext":{"slug":"/ctf-n1ctf-2021"}},"staticQueryHashes":["251939775","401334301","825871152"]}