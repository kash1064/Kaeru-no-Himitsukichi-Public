{"componentChunkName":"component---src-templates-post-template-js","path":"/powershell-custom-prompt","result":{"data":{"markdownRemark":{"id":"81c0c9ef-925f-5ea7-a532-5803b23fe106","html":"<h2 id=\"powershellのプロンプト表示をカスタマイズする\" style=\"position:relative;\"><a href=\"#powershell%E3%81%AE%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88%E8%A1%A8%E7%A4%BA%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%99%E3%82%8B\" aria-label=\"powershellのプロンプト表示をカスタマイズする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PowerShellのプロンプト表示をカスタマイズする</h2>\n<p>では早速ここからPowerShellに入門していきます。</p>\n<p>まずは、プロンプトの表示をシンプルにしてあげましょう。<br>\n初期状態では、以下のように “PS [カレントディレクトリ]“の表示になっているかと思います。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\Users\\yuki> </code></pre></div>\n<p>ここで、次のように入力することで、カレントディレクトリの表示を削除することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\Users\\yuki> function Prompt { \"PS > \" }\nPS ></code></pre></div>\n<p>この状態から元に戻すには、以下のように入力します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS > function prompt { \"PS \" + $(Get-Location) + \"> \" }</code></pre></div>\n<p>これで、表記は元に戻ります。</p>\n<p>次に、別のコマンドを使って表示をカスタマイズしてみましょう。</p>\n<p>以下のコマンドを入力すると、$(echo “test”) の出力がプロンプトに表示されるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\Users\\yuki> function prompt { \"PS \" + $(echo \"test\") + \"> \" }\nPS test></code></pre></div>\n<p>上記の手法を用いることで、PowerShellのプロンプト表示を自由に変更することができるようになります。</p>\n<p><strong>ちなみに、カレントディレクトリを表示するために使用したGet-Locationには、同様の命令を指すエイリアスが、ほかに2つあります。</strong></p>\n<p>それは、<strong>glとpwd</strong>です。</p>\n<p>そのため、以下のように入力しても、Get-Locationを使用した時と同様、プロンプトにはカレントディレクトリが表示されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\Users\\yuki> function prompt {\n>> \"PS \" + $(pwd) + \"> \" }\n\nPS C:\\Users\\yuki> function prompt {\n>> \"PS \" + $(gl) + \"> \" }\n\nPS C:\\Users\\yuki></code></pre></div>\n<p>これらのエイリアスですが、果たしてすべて知っておく必要があるのか、という疑問があります。<br>\n実際に使用するのが自分だけであれば、正直1つだけでも十分かなと思います。</p>\n<p>しかしながら、<strong>セキュリティの領域でPowerShellを使っていこうという場合には、すべてのエイリアスを頭に入れておく必要がある</strong>ようです。</p>\n<p><strong>自分が使用しないエイリアスでも、攻撃者が使用しているかもしれない、攻撃者の狙いを把握するためにも理解が必要</strong>、ということのようです。</p>\n<p>詳しくは以下の記事を参照しました。</p>\n<p><a href=\"https://akaki.io/2019/learning_powershell.html\" target=\"_blank\" rel=\"noopener noreferrer\">大和セキュリティ勉強会でPowerShellの基礎を学ぶ · Akaki I/O</a></p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>今回はプロンプトの表記を変える方法と、エイリアスについて触れました。</p>\n<p>PowerShellはOSS化されており、WindowsだけでなくLinuxやMacOSでもパワフルに使えるシェルスクリプトなので、今後もっともっと学んでいきたいと思います。</p>","fields":{"slug":"/powershell-custom-prompt","tagSlugs":["/tag/power-shell/","/tag/windows/"]},"frontmatter":{"date":"2020-06-30","description":"PowerShellのプロンプト表示をカスタマイズする方法についてまとめます。","tags":["PowerShell","Windows"],"title":"PowerShellのプロンプト表示を自由にカスタムする方法","socialImage":{"publicURL":"/static/dc4d8b7f8795f3c3d3489d9957d155f2/no-image.png"}}}},"pageContext":{"slug":"/powershell-custom-prompt"}},"staticQueryHashes":["251939775","401334301","825871152"]}